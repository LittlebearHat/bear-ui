{"version":3,"file":"index.js","sources":["../../../../../hooks/use-namespace/index.ts"],"sourcesContent":["function _bem(\n  prefixName: string,\n  blockSuffix: string,\n  element: string,\n  modifier: string\n) {\n  if (blockSuffix) {\n    prefixName += `-${blockSuffix}`\n  }\n  if (element) {\n    prefixName += `__${element}`\n  }\n  if (modifier) {\n    prefixName += `--${modifier}`\n  }\n  return prefixName\n}\n\nfunction createBEM(prefixName: string) {\n  const b = (blockSuffix = '') => _bem(prefixName, blockSuffix, '', '')\n  const e = (element = '') => (element ? _bem(prefixName, '', element, '') : '')\n  const m = (modifier = '') =>\n    modifier ? _bem(prefixName, '', '', modifier) : ''\n\n  const be = (blockSuffix = '', element = '') =>\n    blockSuffix && element ? _bem(prefixName, blockSuffix, element, '') : ''\n  const bm = (blockSuffix = '', modifier = '') =>\n    blockSuffix && modifier ? _bem(prefixName, blockSuffix, '', modifier) : ''\n  const em = (element = '', modifier = '') =>\n    element && modifier ? _bem(prefixName, '', element, modifier) : ''\n  const bem = (blockSuffix = '', element = '', modifier = '') =>\n    blockSuffix && element && modifier\n      ? _bem(prefixName, blockSuffix, element, modifier)\n      : ''\n\n  const is = (name: string, state: string | boolean) =>\n    state ? `is-${name}` : ''\n\n  // for css var\n  // b-xxx: value;\n  const cssVar = (object: Record<string, string>) => {\n    const styles: Record<string, string> = {}\n    for (const key in object) {\n      if (object[key]) {\n        styles[`${key}`] = object[key]\n      }\n    }\n    return styles\n  }\n  // with block\n  const cssVarBlock = (object: Record<string, string>) => {\n    const styles: Record<string, string> = {}\n    for (const key in object) {\n      if (object[key]) {\n        styles[`${prefixName}-${key}`] = object[key]\n      }\n    }\n    return styles\n  }\n  const cssVarName = (name: string) => `${name}`\n  const cssVarBlockName = (name: string) => `${prefixName}-${name}`\n\n  return {\n    b,\n    e,\n    m,\n    be,\n    bm,\n    em,\n    bem,\n    is,\n    cssVar,\n    cssVarBlock,\n    cssVarName,\n    cssVarBlockName\n  }\n}\n\nexport function createNamespace(name: string) {\n  const prefixName = `b-${name}`\n  return createBEM(prefixName)\n}\n"],"names":[],"mappings":"AAAA,SAAS,KACP,YACA,aACA,SACA,UACA;AACA,MAAI,aAAa;AACf,kBAAc,IAAI;AAAA,EACpB;AACA,MAAI,SAAS;AACX,kBAAc,KAAK;AAAA,EACrB;AACA,MAAI,UAAU;AACZ,kBAAc,KAAK;AAAA,EACrB;AACO,SAAA;AACT;AAEA,SAAS,UAAU,YAAoB;AAC/B,QAAA,IAAI,CAAC,cAAc,OAAO,KAAK,YAAY,aAAa,IAAI,EAAE;AAC9D,QAAA,IAAI,CAAC,UAAU,OAAQ,UAAU,KAAK,YAAY,IAAI,SAAS,EAAE,IAAI;AACrE,QAAA,IAAI,CAAC,WAAW,OACpB,WAAW,KAAK,YAAY,IAAI,IAAI,QAAQ,IAAI;AAElD,QAAM,KAAK,CAAC,cAAc,IAAI,UAAU,OACtC,eAAe,UAAU,KAAK,YAAY,aAAa,SAAS,EAAE,IAAI;AACxE,QAAM,KAAK,CAAC,cAAc,IAAI,WAAW,OACvC,eAAe,WAAW,KAAK,YAAY,aAAa,IAAI,QAAQ,IAAI;AAC1E,QAAM,KAAK,CAAC,UAAU,IAAI,WAAW,OACnC,WAAW,WAAW,KAAK,YAAY,IAAI,SAAS,QAAQ,IAAI;AAClE,QAAM,MAAM,CAAC,cAAc,IAAI,UAAU,IAAI,WAAW,OACtD,eAAe,WAAW,WACtB,KAAK,YAAY,aAAa,SAAS,QAAQ,IAC/C;AAEN,QAAM,KAAK,CAAC,MAAc,UACxB,QAAQ,MAAM,SAAS;AAInB,QAAA,SAAS,CAAC,WAAmC;AACjD,UAAM,SAAiC,CAAA;AACvC,eAAW,OAAO,QAAQ;AACpB,UAAA,OAAO,GAAG,GAAG;AACf,eAAO,GAAG,KAAK,IAAI,OAAO,GAAG;AAAA,MAC/B;AAAA,IACF;AACO,WAAA;AAAA,EAAA;AAGH,QAAA,cAAc,CAAC,WAAmC;AACtD,UAAM,SAAiC,CAAA;AACvC,eAAW,OAAO,QAAQ;AACpB,UAAA,OAAO,GAAG,GAAG;AACf,eAAO,GAAG,cAAc,KAAK,IAAI,OAAO,GAAG;AAAA,MAC7C;AAAA,IACF;AACO,WAAA;AAAA,EAAA;AAEH,QAAA,aAAa,CAAC,SAAiB,GAAG;AACxC,QAAM,kBAAkB,CAAC,SAAiB,GAAG,cAAc;AAEpD,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;AAEO,SAAS,gBAAgB,MAAc;AAC5C,QAAM,aAAa,KAAK;AACxB,SAAO,UAAU,UAAU;AAC7B;"}